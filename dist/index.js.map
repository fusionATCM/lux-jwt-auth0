{"version":3,"sources":["../lib/index.js"],"names":["accesToken","decoded","complete","console","log","client","cache","rateLimit","jwksRequestsPerMinute","jwksUri","Promise","resolve","reject","getSigningKey","header","kid","err","key","secret","publicKey","rsaPublicKey","getSecretFromAccessToken","options","requestProperty","isRevoked","algorithms","audience","issuer","ignoreExpiration","ignoreNotBefore","subject","clockTolerance","maxAge","clockTimestamp","Error","verifyOpts","request","response","validCorsPreflight","accessToken","getTokenFromHeader","decodedAccessToken","secretStr","e","message","method","headers","has","get","split","map","trim","includes","parts","length","scheme","credentials","test","sign","decode","verify"],"mappings":"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","file":"index.js","sourcesContent":["import { isFunction } from \"util\";\nimport { sign, decode, verify } from \"jsonwebtoken\";\nimport set from \"lodash.set\";\nimport UnauthorizedError from \"./errors/unauthorized-error\";\nimport jwksRsa from \"jwks-rsa\";\n\nexport default function(options = {}) {\n  const {\n    // lux-jwt options\n    secret,\n    requestProperty = \"user\",\n    isRevoked = false,\n\n    // 'verify' options\n    algorithms = false,\n    audience = false,\n    issuer = false,\n    ignoreExpiration = false,\n    ignoreNotBefore = false,\n    subject = false,\n    clockTolerance = 0,\n    maxAge,\n    clockTimestamp\n  } = options;\n\n  if (isRevoked && !isFunction(isRevoked)) {\n    throw new Error(\"Token revocation must be a function!\");\n  }\n\n  const verifyOpts = {\n    algorithms,\n    audience,\n    issuer,\n    ignoreExpiration,\n    ignoreNotBefore,\n    subject,\n    clockTolerance,\n    maxAge,\n    clockTimestamp\n  };\n\n  return async (request, response) => {\n    if (!validCorsPreflight(request)) {\n      const accessToken = getTokenFromHeader(request);\n\n      let decodedAccessToken;\n      let err;\n      let secretStr = await getSecretFromAccessToken(accessToken);\n\n      try {\n        console.log(\"accessToken\", accessToken);\n        console.log(\"secretStr\", secretStr);\n        console.log(\"verifyOpts\", verifyOpts);\n\n        decodedAccessToken = verify(accessToken, secretStr, verifyOpts);\n\n        if (isRevoked) {\n          if (await isRevoked(request, decodedAccessToken)) {\n            throw new UnauthorizedError(\"Token has been revoked\");\n          }\n        }\n\n        set(request, requestProperty, decodedAccessToken);\n      } catch (e) {\n        throw new UnauthorizedError(e.message || e);\n      }\n    }\n  };\n}\n\nasync function getSecretFromAccessToken(accesToken) {\n  let decoded = decode(accesToken, { complete: true });\n  console.log(\"decoded token\", decoded);\n\n  const client = new jwksRsa({\n    cache: true,\n    rateLimit: true,\n    jwksRequestsPerMinute: 5,\n    jwksUri: \"https://impactalytics.eu.auth0.com/.well-known/jwks.json\"\n  });\n  return new Promise(function(resolve, reject) {\n    client.getSigningKey(decoded.header.kid, function(err, key) {\n      if (err) {\n        reject(err);\n      }\n      // Provide the key.\n      console.log(\"KEY\", key);\n      let secret = key.publicKey || key.rsaPublicKey;\n      resolve(secret);\n    });\n  });\n}\n\n/**\n * Checks if an OPTIONS request with the access-control-request-headers containing authorization is being made\n * @param request\n * @returns {boolean}\n */\nfunction validCorsPreflight(request) {\n  if (\n    request.method === \"OPTIONS\" &&\n    request.headers.has(\"access-control-request-headers\")\n  ) {\n    return request.headers\n      .get(\"access-control-request-headers\")\n      .split(\",\")\n      .map(function(header) {\n        return header.trim();\n      })\n      .includes(\"authorization\");\n  } else {\n    return false;\n  }\n}\n\n/**\n * Retrieves the JWT from the authorization header\n * @param request\n * @returns {string} The JWT\n */\nfunction getTokenFromHeader(request) {\n  if (!request.headers || !request.headers.has(\"authorization\")) {\n    throw new UnauthorizedError(\"No authorization header present\");\n  }\n\n  const parts = request.headers.get(\"authorization\").split(\" \");\n\n  if (parts.length === 2) {\n    const scheme = parts[0];\n    const credentials = parts[1];\n\n    if (/^Bearer$/i.test(scheme)) {\n      return credentials;\n    } else {\n      throw new UnauthorizedError(\n        'Bad Authorization header format. Format is \"Authorization: Bearer token\"'\n      );\n    }\n  } else {\n    throw new UnauthorizedError(\n      'Bad Authorization header format. Format is \"Authorization: Bearer token\"'\n    );\n  }\n}\n\nexport { sign, decode, verify };\n"]}